<Window x:Class="WPF_Controls_Layout.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF_Controls_Layout"
        mc:Ignorable="d"
        Title="Controls and Layoyt" Height="450" Width="800">
    <Grid>
        <!-- 프로그램에서 사용할 XML Data Resource를 가져오고 포맷을 맞춰줌 -->
        <Grid.Resources>
            <!-- samples.xml의 Data Resource를 SamplesList라는 이름으로 사용할 수 있도록 가져옴  -->
            <XmlDataProvider x:Key="SamplesList"  XPath="/Samples" Source="samples.xml" />
            
            <!-- sample.xml에서 받아오는 데이터들의 포맷을 맞춰줌 -->
            <!-- XML 데이터를 직접 사용할 일이 있을 경우에나 유용, 아니면 그냥 넘어가도 됨-->
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="Calibri" />
                <Setter Property="FontSize" Value="10pt" />
            </Style>
            
            <DataTemplate x:Key="SamplesListItemTemplate">
                <StackPanel>
                    <TextBlock Text="{Binding XPath=@Title}" />
                </StackPanel>
            </DataTemplate>
            
            <Style x:Key="SamplesListBox" TargetType="{x:Type ListBox}">
                <Setter Property="ItemTemplate" Value="{DynamicResource SamplesListItemTemplate}" />
                <Setter Property="ItemContainerStyle" Value="{DynamicResource SamplesListBoxItem}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Width" Value="186" />
            </Style>

            <Style x:Key="SamplesListBoxItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid>
                                <Rectangle x:Name="ListBG" Fill="{TemplateBinding Background}" RadiusX="5" RadiusY="5" Stroke="transparent" />
                                <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="top" RadiusX="3" RadiusY="3" Opacity="0" Fill="#ccffffff" Stroke="transparent" Height="15px" />
                                <ContentPresenter x:Name="ContentSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="15,5,5,5" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true" />
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter Property="Background" Value="sc#1.000000, 0.769689, 0.831936, 1.000000" />
                                    <Setter Property="FontWeight" Value="bold" />
                                    <Setter Property="Foreground" Value="black" />
                                    <Setter TargetName="ListBG" Property="Rectangle.Stroke" Value="sc#1.000000, 0.250141, 0.333404, 0.884413" />
                                    <Setter TargetName="GelShine" Property="Rectangle.Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="sc#1.000000, 0.769689, 0.831936, 1.000000" />
                                    <Setter Property="Foreground" Value="black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        
        <!--왜 column을 나눠놨는지 모르겠음-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="377*"/>
            <ColumnDefinition Width="415*"/>
        </Grid.ColumnDefinitions>

        <Grid  Background="sc#1.000000, 0.769689, 0.831936, 1.000000" 
               Name="DocumentRoot" Grid.ColumnSpan="2" >
            <Grid.RowDefinitions>
                <RowDefinition Height="50" /> <!-- Title text block이 들어가는 Row -->
                <RowDefinition Height="*" /> <!-- XML Data를 보여주는 Row -->
                <RowDefinition Height="20" /> <!-- 사용하지 않는 Row -->
            </Grid.RowDefinitions>

            <!-- Title text block, 주의 깊게 볼 속성은 없음 -->
            <TextBlock  Grid.RowSpan="2"  Margin="20,5,20,5" TextAlignment="left" 
                        Foreground="sc#1.000000, 0.250141, 0.333404, 0.884413" 
                        FontStyle="Italic" FontSize="30pt" FontFamily="Calibri" 
                        FontWeight="bold">XAMLPad Express</TextBlock>

            <Grid Grid.Row="1">
                <Rectangle Fill="white" RadiusX="14" RadiusY="14" Margin="10" 
                           Stroke="sc#1.000000, 0.250141, 0.333404, 0.884413" StrokeDashArray="2"/>
                <DockPanel LastChildFill="True" Margin="20">
                    <!-- Layout, Control 목록, Layout과 Control이 Category로 나눠져 있음 -->
                    <Grid  Width="200px">
                        <Rectangle Fill="sc#1.000000, 0.769689, 0.831936, 1.000000" 
                                   RadiusX="10" RadiusY="10" 
                                   Stroke="sc#1.000000, 0.250141, 0.333404, 0.884413" 
                                   StrokeDashArray="2" />
                        <DockPanel Margin="7" LastChildFill="False">
                            <TextBlock Margin="0,0,0,10"   Text="Sample Library" 
                                       Foreground="sc#1.000000, 0.250141, 0.333404, 0.884413" 
                                       TextAlignment="center"   FontWeight="Bold" FontSize="14pt"   
                                       DockPanel.Dock="top"/>
                            <!-- Layout list expander -->
                            <Expander  Margin="0,0,0,10" DockPanel.Dock="top" Background="white" 
                                       FocusVisualStyle="{x:Null}">
                                <Expander.Header>
                                    <TextBlock Margin="10,0,0,0"  FontFamily="Calibri"
                                               FontWeight="bold" >Layout</TextBlock>
                                </Expander.Header>
                                <!-- samples.xml의 Layout Data들을 바인딩-->
                                <ListBox Name="LayoutListBox" 
                                         DataContext="{Binding Source={StaticResource SamplesList}, 
                                                       XPath=/Samples/Category[1]/Sample}" 
                                         ItemsSource="{Binding}" SelectionChanged="HandleSelectionChanged"  
                                         Style="{DynamicResource SamplesListBox}" IsSynchronizedWithCurrentItem="True"/>
                            </Expander>
                            <!-- Layout과 Control의 각 요소마다 SelectionChanged라는 이벤트 처리 함수가 있음 -->
                            <!-- Controls list expander -->
                            <Expander  Margin="0,0,0,10" DockPanel.Dock="top" Background="white" 
                                       FocusVisualStyle="{x:Null}">
                                <Expander.Header>
                                    <TextBlock Margin="10,0,0,0"  FontFamily="Calibri" FontWeight="bold"  TextTrimming="WordEllipsis">Controls</TextBlock>
                                </Expander.Header>
                                <!-- sample.xml의 Control Data들을 바인딩  -->
                                <ListBox MaxHeight="300"  
                                         DataContext="{Binding Source={StaticResource SamplesList}, 
                                                       XPath=/Samples/Category[2]/Sample}" 
                                         ItemsSource="{Binding}" SelectionChanged="HandleSelectionChanged" 
                                         Style="{DynamicResource SamplesListBox}"  
                                         IsSynchronizedWithCurrentItem="True" SelectedValue="X" />
                            </Expander>
                        </DockPanel>
                    </Grid>

                    <!-- Layout과 Controls의 Item중 하나를 선택하면 해당 Item의 정보를 보여주는 부분 -->
                    <DockPanel Name="Details" LastChildFill="True">
                        
                        <!-- 해당 영역에 바인딩 할 데이터를 명시-->
                        <DockPanel.DataContext>
                            <Binding Source="{StaticResource SamplesList}" 
                                     XPath="/Samples/Category[1]/Sample"/>
                        </DockPanel.DataContext>
                        
                        <!-- samples.xml 데이터의 Title 부분을 표시 -->
                        <StackPanel Margin="20,10,0,0" DockPanel.Dock="top" Orientation="Horizontal" >
                            <TextBlock  Text="{Binding XPath=@Title}" FontWeight="Bold" FontSize="16pt"/>
                        </StackPanel>

                        <!-- samples.xml 데이터의 Description 부분을 표시 -->
                        <TextBlock Margin="20,10,20,0" FontSize="11pt"  
                                   Text="{Binding XPath=@Description}" DockPanel.Dock="top" 
                                   TextWrapping="Wrap" />

                        <Grid Margin="20,20,20,0">
                            <Grid.RowDefinitions>
                                <!-- Layout 과 Control의 예시 이미지 -->
                                <RowDefinition Height="*"  x:Name="PreviewRow" />
                                <!-- Layout 과 Control의 XAML 코드 -->
                                <RowDefinition Height="0.5*"  x:Name="CodeRow" />
                                <!-- Preview만, XAML만, 둘다 보여주는 방식을 컨트롤 하는 버튼  -->
                                <RowDefinition Height="40"  x:Name="ButtonRow" />
                            </Grid.RowDefinitions>

                            <Rectangle Fill="White" RadiusX="14" RadiusY="14" Margin="0,0,0,8"    
                                       StrokeDashArray="2"/>
                            
                            <!-- samples.xml에 각 Item들의 XAML 코드가 보여지는 UI -->
                            <!-- 아래 Row에 TextBox의 Text가 바뀌면 발생하는 이벤트 처리와 연관있어 보임 -->
                            <Grid Name="cc" Grid.Row="0" Margin="0,0,0,8" ClipToBounds="True" />

                            <!-- 경계를 나누기 위해 만든 부분, 딱히 의미 없음-->
                            <Rectangle Height="16" VerticalAlignment="bottom" >
                                <Shape.Fill>
                                    <RadialGradientBrush>
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="sc#0.300000, 0.000000, 0.000000, 0.000000" Offset="0.019230769230769232" />
                                                <GradientStop Color="#FFFFFFFF" Offset="1" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                        <Brush.RelativeTransform>
                                            <TransformGroup>
                                                <TransformGroup.Children>
                                                    <TransformCollection>
                                                        <TranslateTransform X="-0.0052816901408450721" Y="0.5185185185185186" />
                                                    </TransformCollection>
                                                </TransformGroup.Children>
                                            </TransformGroup>
                                        </Brush.RelativeTransform>
                                    </RadialGradientBrush>
                                </Shape.Fill>
                            </Rectangle>
                            <GridSplitter Margin="10,0,10,0" Opacity="0" HorizontalAlignment="Stretch" 
                                          VerticalAlignment="Bottom" Width="Auto" Height="5" 
                                          Background="White" Cursor="SizeNS"/>
                            
                            <!-- samples.xml의 Sytanx 부분(XAML 코드)을 바인딩 -->
                            <TextBox Name="TextBox1" TextChanged="HandleTextChanged"   
                                     Margin="0,20,0,0"  HorizontalScrollBarVisibility="Auto" 
                                     VerticalScrollBarVisibility="Auto"  FontFamily="Consolas" 
                                     FontSize="12pt" BorderBrush="transparent"     
                                     Grid.Row="1" AcceptsTab="True" AcceptsReturn="True" 
                                     Text="{Binding XPath=Syntax}" />
                            
                            <!-- 보여주는 방식을 전환 할 수 있는 Button Control, 각 버튼마다 Click 이벤트가 있음 -->
                            <StackPanel Grid.Row="2"  Orientation="Horizontal" Margin="0,5,0,0">
                                <RadioButton  HorizontalAlignment="left" Margin="5" Click="ShowPreview"
                                              Content="Preview" VerticalAlignment="top"/>
                                <RadioButton  HorizontalAlignment="left" Margin="5" Click="ShowCode"
                                              Content="XAML" VerticalAlignment="top"/>
                                <RadioButton  HorizontalAlignment="left" Margin="5" Click="ShowSplit" 
                                              Content="Split" VerticalAlignment="top" IsChecked="True"/>
                                <!-- Error 메세지 출력, HandleTextChanged 함수에서 처리-->
                                <TextBlock Name="ErrorText" Margin="100,5,60,0" TextTrimming="WordEllipsis" 
                                           Foreground="red" FontSize="10pt" FontWeight="bold" />
                            </StackPanel>
                        </Grid>
                    </DockPanel>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</Window>
